/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dist.*;
import dist.StringsDist;
import java.awt.BorderLayout;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.jfree.chart.ChartPanel;
import pseudoaleatorios.*;

public class FrmPrincipal extends javax.swing.JFrame {

    String strDistribucion;
    DistBase distBase;
    Metodo metodoRand;

    /**
     * Creates new form FrmPrincipal
     */
    public FrmPrincipal() {
        initComponents();
        panelParamsRandom.setVisible(false);
        setExtendedState(MAXIMIZED_BOTH);
        actualizaTituloPanel(panelParametros, "Parámetros");
        actualizaTituloPanel(panelGraficas, "Gráficas");
        actualizaTituloPanel(panelContinuas, "Distribuciones continuas");
        actualizaTituloPanel(panelDiscretas, "Distribuciones discretas");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGrafica = new javax.swing.JPanel();
        btnCreditos = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        panelContinuas = new javax.swing.JPanel();
        btnDistBeta = new javax.swing.JButton();
        btnDistChiCuadrada = new javax.swing.JButton();
        btnDistExponencial = new javax.swing.JButton();
        btnDistFFisher = new javax.swing.JButton();
        btnDistGamma = new javax.swing.JButton();
        btnDistLognormal = new javax.swing.JButton();
        btnDistNormal = new javax.swing.JButton();
        btnDistStudentT = new javax.swing.JButton();
        btnDistUniforme = new javax.swing.JButton();
        btnDistWeibull = new javax.swing.JButton();
        panelDiscretas = new javax.swing.JPanel();
        btnDistBinomial = new javax.swing.JButton();
        btnDistBinomialNegativa = new javax.swing.JButton();
        btnDistGeometrica = new javax.swing.JButton();
        btnDistHipergeometrica = new javax.swing.JButton();
        btnDistPoisson = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnExportarPseudoaleatorios = new javax.swing.JButton();
        panelParametros = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtParams = new javax.swing.JTextArea();
        btnActualizaDistribucion = new javax.swing.JButton();
        btnRegeneraRandom = new javax.swing.JButton();
        chkRandomCongruenciales = new javax.swing.JCheckBox();
        panelParamsRandom = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtParamsRandom = new javax.swing.JTextArea();
        cmbMetodo = new javax.swing.JComboBox<>();
        panelGraficas = new javax.swing.JPanel();
        btnDensidad = new javax.swing.JButton();
        btnAcumulada = new javax.swing.JButton();
        btnInversa = new javax.swing.JButton();
        btnExportarInversa = new javax.swing.JButton();
        btnExportarAcumulada = new javax.swing.JButton();
        btnExportarDensidad = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout panelGraficaLayout = new javax.swing.GroupLayout(panelGrafica);
        panelGrafica.setLayout(panelGraficaLayout);
        panelGraficaLayout.setHorizontalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 224, Short.MAX_VALUE)
        );
        panelGraficaLayout.setVerticalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        btnCreditos.setText("Créditos");
        btnCreditos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreditosActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnDistBeta.setText("Distribución Beta");
        btnDistBeta.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDistBeta.setPreferredSize(new java.awt.Dimension(170, 32));
        btnDistBeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistBetaActionPerformed(evt);
            }
        });

        btnDistChiCuadrada.setText("Distribución Chi-Cuadrada");
        btnDistChiCuadrada.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDistChiCuadrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistChiCuadradaActionPerformed(evt);
            }
        });

        btnDistExponencial.setText("Distribución Exponencial");
        btnDistExponencial.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDistExponencial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistExponencialActionPerformed(evt);
            }
        });

        btnDistFFisher.setText("Distribucion F Fisher");
        btnDistFFisher.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDistFFisher.setPreferredSize(new java.awt.Dimension(170, 32));
        btnDistFFisher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistFFisherActionPerformed(evt);
            }
        });

        btnDistGamma.setText("Distribución Gamma");
        btnDistGamma.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDistGamma.setPreferredSize(new java.awt.Dimension(170, 32));
        btnDistGamma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistGammaActionPerformed(evt);
            }
        });

        btnDistLognormal.setText("Distribución Lognormal");
        btnDistLognormal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDistLognormal.setPreferredSize(new java.awt.Dimension(170, 32));
        btnDistLognormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistLognormalActionPerformed(evt);
            }
        });

        btnDistNormal.setText("Distribucion Normal");
        btnDistNormal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDistNormal.setPreferredSize(new java.awt.Dimension(170, 32));
        btnDistNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistNormalActionPerformed(evt);
            }
        });

        btnDistStudentT.setText("Distribución Student T");
        btnDistStudentT.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDistStudentT.setPreferredSize(new java.awt.Dimension(170, 32));
        btnDistStudentT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistStudentTActionPerformed(evt);
            }
        });

        btnDistUniforme.setText("Distribución Uniforme");
        btnDistUniforme.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDistUniforme.setPreferredSize(new java.awt.Dimension(170, 32));
        btnDistUniforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistUniformeActionPerformed(evt);
            }
        });

        btnDistWeibull.setText("Distribución Weibull");
        btnDistWeibull.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDistWeibull.setPreferredSize(new java.awt.Dimension(170, 32));
        btnDistWeibull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistWeibullActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelContinuasLayout = new javax.swing.GroupLayout(panelContinuas);
        panelContinuas.setLayout(panelContinuasLayout);
        panelContinuasLayout.setHorizontalGroup(
            panelContinuasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContinuasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContinuasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDistWeibull, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDistUniforme, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDistStudentT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDistBeta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDistChiCuadrada, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                    .addComponent(btnDistExponencial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDistFFisher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDistGamma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDistLognormal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDistNormal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelContinuasLayout.setVerticalGroup(
            panelContinuasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContinuasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDistBeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDistChiCuadrada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDistExponencial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDistFFisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDistGamma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDistLognormal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDistNormal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDistStudentT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDistUniforme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDistWeibull, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnDistBinomial.setText("Distribucion Binomial");
        btnDistBinomial.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDistBinomial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistBinomialActionPerformed(evt);
            }
        });

        btnDistBinomialNegativa.setText("Distribución Binomial Negativa");
        btnDistBinomialNegativa.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDistBinomialNegativa.setPreferredSize(new java.awt.Dimension(170, 32));
        btnDistBinomialNegativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistBinomialNegativaActionPerformed(evt);
            }
        });

        btnDistGeometrica.setText("Distribución Geométrica");
        btnDistGeometrica.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDistGeometrica.setPreferredSize(new java.awt.Dimension(170, 32));
        btnDistGeometrica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistGeometricaActionPerformed(evt);
            }
        });

        btnDistHipergeometrica.setText("Distribución Hipergeométrica");
        btnDistHipergeometrica.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDistHipergeometrica.setPreferredSize(new java.awt.Dimension(170, 32));
        btnDistHipergeometrica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistHipergeometricaActionPerformed(evt);
            }
        });

        btnDistPoisson.setText("Distribución Poisson");
        btnDistPoisson.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDistPoisson.setPreferredSize(new java.awt.Dimension(170, 32));
        btnDistPoisson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistPoissonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDiscretasLayout = new javax.swing.GroupLayout(panelDiscretas);
        panelDiscretas.setLayout(panelDiscretasLayout);
        panelDiscretasLayout.setHorizontalGroup(
            panelDiscretasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiscretasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDiscretasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDistGeometrica, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDistHipergeometrica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDistPoisson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDistBinomialNegativa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDistBinomial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelDiscretasLayout.setVerticalGroup(
            panelDiscretasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiscretasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDistBinomial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDistBinomialNegativa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDistGeometrica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDistHipergeometrica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDistPoisson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panelDiscretas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelContinuas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelContinuas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDiscretas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnExportarPseudoaleatorios.setText("Exportar pseudoaleatorios generados");
        btnExportarPseudoaleatorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarPseudoaleatoriosActionPerformed(evt);
            }
        });

        txtParams.setColumns(20);
        txtParams.setRows(5);
        jScrollPane1.setViewportView(txtParams);

        btnActualizaDistribucion.setText("Actualizar parámetros de distribución");
        btnActualizaDistribucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizaDistribucionActionPerformed(evt);
            }
        });

        btnRegeneraRandom.setText("Genera otros valores de distribución");
        btnRegeneraRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegeneraRandomActionPerformed(evt);
            }
        });

        chkRandomCongruenciales.setText("Generar valores con metodos congruenciales");
        chkRandomCongruenciales.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkRandomCongruencialesItemStateChanged(evt);
            }
        });

        txtParamsRandom.setColumns(20);
        txtParamsRandom.setRows(5);
        txtParamsRandom.setBorder(null);
        jScrollPane2.setViewportView(txtParamsRandom);

        cmbMetodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Método multiplicativo", "Método mixto" }));
        cmbMetodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMetodoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panelParamsRandomLayout = new javax.swing.GroupLayout(panelParamsRandom);
        panelParamsRandom.setLayout(panelParamsRandomLayout);
        panelParamsRandomLayout.setHorizontalGroup(
            panelParamsRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelParamsRandomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelParamsRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(cmbMetodo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelParamsRandomLayout.setVerticalGroup(
            panelParamsRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelParamsRandomLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout panelParametrosLayout = new javax.swing.GroupLayout(panelParametros);
        panelParametros.setLayout(panelParametrosLayout);
        panelParametrosLayout.setHorizontalGroup(
            panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelParametrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnRegeneraRandom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelParamsRandom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnActualizaDistribucion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chkRandomCongruenciales, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelParametrosLayout.setVerticalGroup(
            panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelParametrosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnActualizaDistribucion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkRandomCongruenciales)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelParamsRandom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegeneraRandom))
        );

        btnDensidad.setText("Densidad");
        btnDensidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDensidadActionPerformed(evt);
            }
        });

        btnAcumulada.setText("Acumulada");
        btnAcumulada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcumuladaActionPerformed(evt);
            }
        });

        btnInversa.setText("Inversa");
        btnInversa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInversaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelGraficasLayout = new javax.swing.GroupLayout(panelGraficas);
        panelGraficas.setLayout(panelGraficasLayout);
        panelGraficasLayout.setHorizontalGroup(
            panelGraficasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGraficasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGraficasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAcumulada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDensidad, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInversa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelGraficasLayout.setVerticalGroup(
            panelGraficasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGraficasLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDensidad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAcumulada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInversa))
        );

        btnExportarInversa.setText("Exportar valores para inversa");
        btnExportarInversa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarInversaActionPerformed(evt);
            }
        });

        btnExportarAcumulada.setText("Exportar valores para acumulada");
        btnExportarAcumulada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarAcumuladaActionPerformed(evt);
            }
        });

        btnExportarDensidad.setText("Exportar valores para densidad");
        btnExportarDensidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarDensidadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(panelGraficas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelParametros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnExportarPseudoaleatorios, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                            .addComponent(btnExportarInversa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnExportarDensidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnExportarAcumulada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelParametros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelGraficas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExportarDensidad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExportarAcumulada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExportarInversa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExportarPseudoaleatorios)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCreditos, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelGrafica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelGrafica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCreditos)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnDensidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDensidadActionPerformed
        if (!existeDistBase()) {
            return;
        }
        distBase.densidad();
        actualizaGrafica(btnDensidad.getText());
    }//GEN-LAST:event_btnDensidadActionPerformed

    private void btnAcumuladaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcumuladaActionPerformed
        if (!existeDistBase()) {
            return;
        }
        distBase.acumulada();
        actualizaGrafica("Acumulada");
    }//GEN-LAST:event_btnAcumuladaActionPerformed

    private void btnInversaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInversaActionPerformed
        if (!existeDistBase()) {
            return;
        }
        distBase.inversa();
        Arrays.stream(distBase.getY()).forEach(System.out::println);
        actualizaGrafica("Inversa");
    }//GEN-LAST:event_btnInversaActionPerformed

    private void btnActualizaDistribucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizaDistribucionActionPerformed
        regeneraDistribucion();
    }//GEN-LAST:event_btnActualizaDistribucionActionPerformed

    private boolean existeDistBase() {
        if (distBase == null) {
            muestraMensaje("No ha seleccioando una distribución");
        }
        return distBase != null;
    }

    private void regeneraDistribucion() {
        panelGrafica.removeAll();
        actualizaTituloPanel(panelGraficas, "Gráficas para distribución " + strDistribucion);
        distBase = new DistBase();
        String parametros[] = txtParams.getText().split("\n");
        if (strDistribucion.equals(StringsDist.distBinomial)) {
            distBase = new DistBinomial(parametros);
        } else if (strDistribucion.equals(StringsDist.distBinomialNegativa)) {
            distBase = new DistBinomialNegativa(parametros);
        } else if (strDistribucion.equals(StringsDist.distBeta)) {
            distBase = new DistBeta(parametros);
        } else if (strDistribucion.equals(StringsDist.distChiCuadrada)) {
            distBase = new DistChiCuadrada(parametros);
        } else if (strDistribucion.equals(StringsDist.distExponencial)) {
            distBase = new DistExponencial(parametros);
        } else if (strDistribucion.equals(StringsDist.distFFisher)) {
            distBase = new DistFFisher(parametros);
        } else if (strDistribucion.equals(StringsDist.distGamma)) {
            distBase = new DistGamma(parametros);
        } else if (strDistribucion.equals(StringsDist.distGeometrica)) {
            distBase = new DistGeometrica(parametros);
        } else if (strDistribucion.equals(StringsDist.distHipergeometrica)) {
            distBase = new DistHipergeometrica(parametros);
        } else if (strDistribucion.equals(StringsDist.distLognormal)) {
            distBase = new DistLognormal(parametros);
        } else if (strDistribucion.equals(StringsDist.distNormal)) {
            distBase = new DistNormal(parametros);
        } else if (strDistribucion.equals(StringsDist.distPoisson)) {
            distBase = new DistPoisson(parametros);
        } else if (strDistribucion.equals(StringsDist.distStudentT)) {
            distBase = new DistStudentT(parametros);
        } else if (strDistribucion.equals(StringsDist.distUniforme)) {
            distBase = new DistUniforme(parametros);
        } else if (strDistribucion.equals(StringsDist.distWeibull)) {
            distBase = new DistWeibull(parametros);
        }
        distBase.metodoRand = metodoRand;
        if (distBase.esContinua) {
            btnDensidad.setText("Densidad");
            btnExportarDensidad.setText("Exportar valores para densidad");
        } else {
            btnDensidad.setText("Masa");
            btnExportarDensidad.setText("Exportar valores para masa");
        }
        muestraMensaje("Distribución actualizada correctamente");
    }

    private void btnDistChiCuadradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistChiCuadradaActionPerformed
        strDistribucion = StringsDist.distChiCuadrada;
        txtParams.setText(DistChiCuadrada.params);
        regeneraDistribucion();
    }//GEN-LAST:event_btnDistChiCuadradaActionPerformed

    private void btnDistBinomialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistBinomialActionPerformed
        strDistribucion = StringsDist.distBinomial;
        txtParams.setText(DistBinomial.params);
        regeneraDistribucion();
    }//GEN-LAST:event_btnDistBinomialActionPerformed

    private void btnDistExponencialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistExponencialActionPerformed
        strDistribucion = StringsDist.distExponencial;
        txtParams.setText(DistExponencial.params);
        regeneraDistribucion();
    }//GEN-LAST:event_btnDistExponencialActionPerformed

    private void btnDistFFisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistFFisherActionPerformed
        strDistribucion = StringsDist.distFFisher;
        txtParams.setText(DistFFisher.params);
        regeneraDistribucion();
    }//GEN-LAST:event_btnDistFFisherActionPerformed

    private void btnDistGammaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistGammaActionPerformed
        strDistribucion = StringsDist.distGamma;
        txtParams.setText(DistGamma.params);
        regeneraDistribucion();
    }//GEN-LAST:event_btnDistGammaActionPerformed

    private void btnDistBinomialNegativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistBinomialNegativaActionPerformed
        strDistribucion = StringsDist.distBinomialNegativa;
        txtParams.setText(DistBinomialNegativa.params);
        regeneraDistribucion();
    }//GEN-LAST:event_btnDistBinomialNegativaActionPerformed

    private void btnDistGeometricaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistGeometricaActionPerformed
        strDistribucion = StringsDist.distGeometrica;
        txtParams.setText(DistGeometrica.params);
        regeneraDistribucion();
    }//GEN-LAST:event_btnDistGeometricaActionPerformed

    private void btnDistHipergeometricaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistHipergeometricaActionPerformed
        strDistribucion = StringsDist.distHipergeometrica;
        txtParams.setText(DistHipergeometrica.params);
        regeneraDistribucion();
    }//GEN-LAST:event_btnDistHipergeometricaActionPerformed

    private void btnDistLognormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistLognormalActionPerformed
        strDistribucion = StringsDist.distLognormal;
        txtParams.setText(DistLognormal.params);
        regeneraDistribucion();
    }//GEN-LAST:event_btnDistLognormalActionPerformed

    private void btnDistNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistNormalActionPerformed
        strDistribucion = StringsDist.distNormal;
        txtParams.setText(DistNormal.params);
        regeneraDistribucion();
    }//GEN-LAST:event_btnDistNormalActionPerformed

    private void btnDistBetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistBetaActionPerformed
        strDistribucion = StringsDist.distBeta;
        txtParams.setText(DistBeta.params);
        regeneraDistribucion();
    }//GEN-LAST:event_btnDistBetaActionPerformed

    private void btnDistPoissonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistPoissonActionPerformed
        strDistribucion = StringsDist.distPoisson;
        txtParams.setText(DistPoisson.params);
        regeneraDistribucion();
    }//GEN-LAST:event_btnDistPoissonActionPerformed

    private void btnDistStudentTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistStudentTActionPerformed
        strDistribucion = StringsDist.distStudentT;
        txtParams.setText(DistStudentT.params);
        regeneraDistribucion();
    }//GEN-LAST:event_btnDistStudentTActionPerformed

    private void btnDistUniformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistUniformeActionPerformed
        strDistribucion = StringsDist.distUniforme;
        txtParams.setText(DistUniforme.params);
        regeneraDistribucion();
    }//GEN-LAST:event_btnDistUniformeActionPerformed

    private void btnDistWeibullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistWeibullActionPerformed
        strDistribucion = StringsDist.distWeibull;
        txtParams.setText(DistWeibull.params);
        regeneraDistribucion();
    }//GEN-LAST:event_btnDistWeibullActionPerformed

    private void chkRandomCongruencialesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkRandomCongruencialesItemStateChanged
        boolean muestra = chkRandomCongruenciales.isSelected();
        panelParamsRandom.setVisible(muestra);
        if(muestra) txtParamsRandom.setText(MetodoCongruencialMultiplicativo.parametros);
        if (!muestra) {
            metodoRand = null;
        }

    }//GEN-LAST:event_chkRandomCongruencialesItemStateChanged

    private void btnRegeneraRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegeneraRandomActionPerformed
        if (!existeDistBase()) {
            return;
        }
        String params[] = txtParamsRandom.getText().split("\n");
        if (cmbMetodo.getSelectedIndex() == 0) {//Multiplicativo
            metodoRand = new MetodoCongruencialMultiplicativo(params);
        } else {//Mixto
            metodoRand = new MetodoCongruencialMixto(params);
        }
        regeneraDistribucion();
    }//GEN-LAST:event_btnRegeneraRandomActionPerformed

    private void cmbMetodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMetodoItemStateChanged
        if (cmbMetodo.getSelectedIndex() == 0) {//Multiplicativo
            txtParamsRandom.setText(MetodoCongruencialMultiplicativo.parametros);
        } else {//Mixto
            txtParamsRandom.setText(MetodoCongruencialMixto.parametros);
        }
    }//GEN-LAST:event_cmbMetodoItemStateChanged

    private void btnCreditosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreditosActionPerformed
        String mensaje="";
        mensaje+="Aplicación realizada por\n";
        mensaje+="Aguilera Alexia\n";
        mensaje+="Bucio Dennis\n";
        mensaje+="Cerna Daniel\n";
        mensaje+="Gutiérrez Andrés\n";
        mensaje+="Moreno Miguel\n";
        mensaje+="Villagómez Francisco\n";
        muestraMensaje(mensaje);
    }//GEN-LAST:event_btnCreditosActionPerformed

    private void btnExportarPseudoaleatoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarPseudoaleatoriosActionPerformed
        if (!existeDistBase()) return;
        String nombreArchivo=JOptionPane.showInputDialog("Ingrese el nombre del archivo sin extensión");
        if(nombreArchivo==null) return;
        if(nombreArchivo.isEmpty()){
            muestraMensaje("No se ingresó un nombre");
            return;
        }
        double x[]=distBase.getX();
        exporta(nombreArchivo, new double[][]{x}, "");
    }//GEN-LAST:event_btnExportarPseudoaleatoriosActionPerformed

    private void btnExportarDensidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarDensidadActionPerformed
        if (!existeDistBase()) return;
        String nombreArchivo=JOptionPane.showInputDialog("Ingrese el nombre del archivo sin extensión");
        if(nombreArchivo==null) return;
        if(nombreArchivo.isEmpty()){
            muestraMensaje("No se ingresó un nombre");
            return;
        }
        distBase.densidad();
        double x[]=distBase.getX();
        double y[]=distBase.getY();
        exporta(nombreArchivo, new double[][]{x, y}, (distBase.esContinua ? " densidad" : " masa"));
    }//GEN-LAST:event_btnExportarDensidadActionPerformed

    private void btnExportarAcumuladaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarAcumuladaActionPerformed
        if (!existeDistBase()) return;
        String nombreArchivo=JOptionPane.showInputDialog("Ingrese el nombre del archivo sin extensión");
        if(nombreArchivo==null) return;
        if(nombreArchivo.isEmpty()){
            muestraMensaje("No se ingresó un nombre");
            return;
        }
        distBase.acumulada();
        double x[]=distBase.getX();
        double y[]=distBase.getY();
        exporta(nombreArchivo, new double[][]{x, y}, "acumulada");
    }//GEN-LAST:event_btnExportarAcumuladaActionPerformed

    private void btnExportarInversaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarInversaActionPerformed
        if (!existeDistBase()) return;
        String nombreArchivo=JOptionPane.showInputDialog("Ingrese el nombre del archivo sin extensión");
        if(nombreArchivo==null) return;
        if(nombreArchivo.isEmpty()){
            muestraMensaje("No se ingresó un nombre");
            return;
        }
        distBase.inversa();
        double x[]=distBase.getX();
        double y[]=distBase.getY();
        exporta(nombreArchivo, new double[][]{x, y}, "inversa");
    }//GEN-LAST:event_btnExportarInversaActionPerformed

    
    private void exporta(String nombreArchivo, double[][] valores, String funcion){
        String ruta=nombreArchivo+".csv";
        File file;
        PrintWriter writer;
        try {
            file=new File(ruta);
            writer = new PrintWriter(ruta);
            for (int i=0; i<valores[0].length; i++) {
                if(valores.length==1){
                    writer.printf("%.6f\n", valores[0][i]);
                }
                else{
                    writer.printf("%.6f, %.6f\n", valores[0][i], valores[1][i]);
                }
            }
            
            writer.flush();
            writer.close();
            String rutaCompleta=file.getAbsoluteFile().getPath();
            String extra = (funcion.equals("") ? ("de la función: " + funcion) : "pseudoaleatorios");
            muestraMensaje("Escritos " + valores[0].length + " registros " + extra + " en " + rutaCompleta);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void muestraMensaje(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje);
    }

    private void actualizaGrafica(String titulo) {
        double x[] = distBase.getX();
        double y[] = distBase.getY();
        Graficador graficador = new Graficador(x, y);
        String tituloGrafica = titulo + " de la distribución " + strDistribucion.toLowerCase() + ".";
        ChartPanel grafica = graficador.creaGrafica(tituloGrafica);
        panelGrafica.removeAll();
        panelGrafica.setLayout(new java.awt.BorderLayout());
        panelGrafica.add(grafica, BorderLayout.CENTER);
        panelGrafica.validate();
    }

    private void actualizaTituloPanel(JPanel panel, String titulo) {
        panel.setBorder(BorderFactory.createTitledBorder(titulo));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizaDistribucion;
    private javax.swing.JButton btnAcumulada;
    private javax.swing.JButton btnCreditos;
    private javax.swing.JButton btnDensidad;
    private javax.swing.JButton btnDistBeta;
    private javax.swing.JButton btnDistBinomial;
    private javax.swing.JButton btnDistBinomialNegativa;
    private javax.swing.JButton btnDistChiCuadrada;
    private javax.swing.JButton btnDistExponencial;
    private javax.swing.JButton btnDistFFisher;
    private javax.swing.JButton btnDistGamma;
    private javax.swing.JButton btnDistGeometrica;
    private javax.swing.JButton btnDistHipergeometrica;
    private javax.swing.JButton btnDistLognormal;
    private javax.swing.JButton btnDistNormal;
    private javax.swing.JButton btnDistPoisson;
    private javax.swing.JButton btnDistStudentT;
    private javax.swing.JButton btnDistUniforme;
    private javax.swing.JButton btnDistWeibull;
    private javax.swing.JButton btnExportarAcumulada;
    private javax.swing.JButton btnExportarDensidad;
    private javax.swing.JButton btnExportarInversa;
    private javax.swing.JButton btnExportarPseudoaleatorios;
    private javax.swing.JButton btnInversa;
    private javax.swing.JButton btnRegeneraRandom;
    private javax.swing.JCheckBox chkRandomCongruenciales;
    private javax.swing.JComboBox<String> cmbMetodo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelContinuas;
    private javax.swing.JPanel panelDiscretas;
    private javax.swing.JPanel panelGrafica;
    private javax.swing.JPanel panelGraficas;
    private javax.swing.JPanel panelParametros;
    private javax.swing.JPanel panelParamsRandom;
    private javax.swing.JTextArea txtParams;
    private javax.swing.JTextArea txtParamsRandom;
    // End of variables declaration//GEN-END:variables
}
